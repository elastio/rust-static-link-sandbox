[package]
name = "with-libudev"
description = """
A binary Rust crate which doesn't do anything but has a dependency on the `libudev` 
crate which in turns has a dependency on the C udev lib.

OpenSSL deps exercised in other tests are a bit of a special case because openssl is common 
enough that there are special affordances for it.  libudev is not that common and is more 
representative of what the long tail of C API dependencies looks like.

This test shows that it's currently not possible to achieve static linking with dependencies
like `libudev` which use the `pkg-config` crate to find native libraries.  The issue at
https://github.com/rust-lang/pkg-config-rs/issues/102 describes why.  The `pkg-config` crate is
broken in that it's support for static linking assumes that any library located in `/usr` must not
be statically linked, for reasons that are lost to the mists of time.

If your code or any transitive dependency uses `pkg-config` then you are going to have a very difficult
time building a static binary.  If you figure out how to do it please submit a PR to this project so I 
will know also.
"""
version = "0.1.0"
edition = "2018"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
libudev = "0.3.0"

[package.metadata.test-crate]

# The libudev-sys crate's build.rs uses pkgconfig to find libudev
#
# When targeting musl pkgconfig thinks it's being invoked in a cross-compiled build, 
# so you need to explicitly tell it shut up and let it happen.
#
# The PKG_CONFIG_ALL_STATIC doesn't actually cause anything to be statically linked, it 
# passes `--static` to `pkg-config` which will cause `pkg-config` to list all dependent libs
# as well, which isn't necessary when dynamically linking.
env = ["PKG_CONFIG_ALLOW_CROSS=1", "PKG_CONFIG_ALL_STATIC=1"]