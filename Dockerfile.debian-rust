# A Rust docker image which can also be used to cross-compile to MUSL for static libs
#
# This is just the official Rust docker image on Debian bullseye, with some additional packages
# installed for libraries that I need to use from Rust, and the musl target.
#
# This environment won't actually work for producing static libraries, as we'll see, but it
# is here to illustrate the problem
FROM rust:1.54-bullseye
RUN apt-get update && apt-get install -yq \
    bash \
    build-essential \
    clang \
    cmake \
    curl \
    e2fsprogs libext2fs-dev \
    file \
    gcc g++ \
    gdb \
    git \
    graphviz \
    libpq-dev \
    libprotoc-dev protoc-gen-go \
    libsqlite3-dev \
    libssl-dev \
    libudev-dev \
    linux-libc-dev \
    musl-dev musl-tools \
    llvm llvm-dev \
    make \
    nodejs npm \
    perl \
    pkgconf \
    sudo \
    xfsprogs xfslibs-dev \
    xutils-dev \
        && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# Install the sabotage LTS linux kernel headers tweaked specifically for use compiling userland and to support musl
RUN git clone https://github.com/sabotage-linux/kernel-headers.git --branch v4.19.88-1 /tmp/kernel-headers && \
    cd /tmp/kernel-headers &&  \
    make ARCH=x86_64 prefix=/usr/local/sabotage install && \
    cd / && rm -rf /tmp/kernel-headers

# Static linking for C++ code
RUN ln -s "/usr/bin/g++" "/usr/bin/musl-g++"

RUN rustup component add rustfmt && \
    rustup component add clippy && \
    rustup target add x86_64-unknown-linux-musl
